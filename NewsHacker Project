/*Recent studies have found that online forums tend to be dominated by a small percentage of their users (1-9-90 Rule).

Is this true of Hacker News?

Is a small percentage of Hacker News submitters taking the majority of the points?*/

SELECT SUM(score)
FROM hacker_news;

SELECT user, SUM(score)
FROM hacker_news
GROUP BY user
HAVING SUM(score) > 200
ORDER BY 2 DESC;

SELECT (517 + 309 + 304 +282) / 6366.0;

SELECT user,
  COUNT(*)
FROM hacker_news
WHERE url LIKE '%watch?v=dQw4w9WgXcQ'
GROUP BY 1
ORDER BY 2 DESC;

/*Which site out of GitHub, Medium, or NYTimes feeds Hacker most? Use a Case statement to find out and build on the query by adding a column for the number of stories from each URL using COUNT()
Also Group By the CASE statement*/

SELECT CASE
   WHEN url LIKE '%github.com%' THEN 'GitHub'
   WHEN url LIKE '%medium.com%' THEN 'Medium'
   WHEN url LIKE '%nytimes.com%' THEN 'NY Times'
   ELSE 'Other'
  END AS 'Source',
  COUNT(*)
FROM hacker_news
GROUP BY 1;

/*What's the best time to post a story to get a high score?'*/

SELECT timestamp
FROM hacker_news
LIMIT 10;

/*Notice that the values are formatted like:
2018-05-08T12:30:00Z
If you ignore the T and Z, the format is:
YYYY-MM-DD HH:MM:SS

SQLite comes with a strftime() function - a very powerful function that allows you to return a formatted date.

It takes two arguments:

strftime(format, column)*/

SELECT timestamp,
   strftime('%H', timestamp)
FROM hacker_news
GROUP BY 1
LIMIT 20;

/*This returns the hour, HH, of the timestamp column!

For strftime(__, timestamp):

%Y returns the year (YYYY)
%m returns the month (01-12)
%d returns the day of the month (1-31)
%H returns 24-hour clock (00-23)
%M returns the minute (00-59)
%S returns the seconds (00-59)
if timestamp format is YYYY-MM-DD HH:MM:SS

Round the average scores (ROUND()).
Rename the columns to make it more readable (AS).
Add a WHERE clause to filter out the NULL values in timestamp.*/


SELECT strftime('%H', timestamp) AS 'Hour',
  ROUND (AVG(score),1) AS 'Average Score',
  COUNT(*) AS 'Number of Stories'
FROM hacker_news
WHERE timestamp is NOT NULL
GROUP BY 1
ORDER BY 1;
